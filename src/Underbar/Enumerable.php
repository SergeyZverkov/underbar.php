<?php
namespace Underbar;
trait Enumerable {
public function each(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::each',$args);}
public function map(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::map',$args);}
public function collect(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::collect',$args);}
public function reduce(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::reduce',$args);}
public function inject(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::inject',$args);}
public function foldl(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::foldl',$args);}
public function reduceRight(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::reduceRight',$args);}
public function foldr(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::foldr',$args);}
public function find(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::find',$args);}
public function detect(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::detect',$args);}
public function findSafe(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::findSafe',$args);}
public function detectSafe(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::detectSafe',$args);}
public function filter(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::filter',$args);}
public function select(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::select',$args);}
public function where(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::where',$args);}
public function findWhere(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::findWhere',$args);}
public function findWhereSafe(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::findWhereSafe',$args);}
public function reject(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::reject',$args);}
public function every(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::every',$args);}
public function all(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::all',$args);}
public function some(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::some',$args);}
public function any(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::any',$args);}
public function sum(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::sum',$args);}
public function contains(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::contains',$args);}
public function invoke(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::invoke',$args);}
public function pluck(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::pluck',$args);}
public function max(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::max',$args);}
public function min(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::min',$args);}
public function sortBy(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::sortBy',$args);}
public function groupBy(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::groupBy',$args);}
public function countBy(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::countBy',$args);}
public function shuffle(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::shuffle',$args);}
public function toArray(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::toArray',$args);}
public function size(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::size',$args);}
public function parallelMap(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::parallelMap',$args);}
public function parallelCollect(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::parallelCollect',$args);}
public function first(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::first',$args);}
public function head(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::head',$args);}
public function take(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::take',$args);}
public function firstSafe(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::firstSafe',$args);}
public function headSafe(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::headSafe',$args);}
public function takeSafe(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::takeSafe',$args);}
public function takeWhile(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::takeWhile',$args);}
public function initial(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::initial',$args);}
public function last(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::last',$args);}
public function lastSafe(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::lastSafe',$args);}
public function rest(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::rest',$args);}
public function tail(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::tail',$args);}
public function drop(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::drop',$args);}
public function dropWhile(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::dropWhile',$args);}
public function compact(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::compact',$args);}
public function flatten(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::flatten',$args);}
public function without(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::without',$args);}
public function union(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::union',$args);}
public function difference(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::difference',$args);}
public function uniq(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::uniq',$args);}
public function unique(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::unique',$args);}
public function zip(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::zip',$args);}
public function zipWith(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::zipWith',$args);}
public function object(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::object',$args);}
public function indexOf(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::indexOf',$args);}
public function lastIndexOf(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::lastIndexOf',$args);}
public function sortedIndex(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::sortedIndex',$args);}
public function range(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::range',$args);}
public function cycle(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::cycle',$args);}
public function repeat(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::repeat',$args);}
public function iterate(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::iterate',$args);}
public function pop(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::pop',$args);}
public function push(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::push',$args);}
public function reverse(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::reverse',$args);}
public function shift(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::shift',$args);}
public function sort(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::sort',$args);}
public function sortByKey(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::sortByKey',$args);}
public function splice(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::splice',$args);}
public function unshift(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::unshift',$args);}
public function concat(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::concat',$args);}
public function join(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::join',$args);}
public function slice(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::slice',$args);}
public function keys(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::keys',$args);}
public function values(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::values',$args);}
public function pairs(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::pairs',$args);}
public function invert(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::invert',$args);}
public function extend(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::extend',$args);}
public function pick(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::pick',$args);}
public function omit(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::omit',$args);}
public function defaults(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::defaults',$args);}
public function tap(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::tap',$args);}
public function duplicate(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::duplicate',$args);}
public function has(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::has',$args);}
public function chain(){$args=func_get_args();array_unshift($args,$this);return call_user_func_array('Underbar\Underbar::chain',$args);}
}
